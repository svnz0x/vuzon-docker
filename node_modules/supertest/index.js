const http = require('http');

function createServer(app) {
  if (typeof app === 'function') {
    return http.createServer(app);
  }
  throw new TypeError('Expected an express app or handler function');
}

function createRequester(app) {
  return {
    post: path => makeRequest(app, 'POST', path),
    get: path => makeRequest(app, 'GET', path),
    delete: path => makeRequest(app, 'DELETE', path),
    put: path => makeRequest(app, 'PUT', path)
  };
}

function makeRequest(app, method, path) {
  return {
    async send(body) {
      const server = createServer(app);
      await new Promise(resolve => server.listen(0, '127.0.0.1', resolve));
      const { port } = server.address();
      try {
        const url = `http://127.0.0.1:${port}${path}`;
        const options = { method, headers: {} };
        if (body !== undefined) {
          options.body = typeof body === 'string' ? body : JSON.stringify(body);
          options.headers['content-type'] = options.headers['content-type'] || 'application/json';
        }
        const response = await fetch(url, options);
        const text = await response.text();
        let parsedBody;
        try {
          parsedBody = text ? JSON.parse(text) : undefined;
        } catch (err) {
          parsedBody = text;
        }
        return {
          status: response.status,
          headers: Object.fromEntries(response.headers.entries()),
          body: parsedBody,
          text
        };
      } finally {
        await new Promise(resolve => server.close(resolve));
      }
    }
  };
}

module.exports = app => createRequester(app);
module.exports.request = createRequester;
